version: '3.7'
services:

  server:
    image: courier
    container_name: courier-server
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./fixtures:/app/fixtures
      - ./src:/app/src
    ports:
      - target: 5000
        published: 5000
        protocol: tcp
    depends_on: 
      - database
  
  database:
    image: mysql:latest
    container_name: mysql
    volumes:
     - ~/mysql/db:/var/lib/mysql
    ports:
     - "33067:3067"
    environment:
      MYSQL_DATABASE: courier_management
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      MYSQL_USER: psarlov
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: secret

  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   container_name: zookeeper
  #   ports: 
  #     - "2181:2181"
  
  # kafka:
  #   image: wurstmeister/kafka
  #   container_name: kafka
  #   ports: 
  #     - "29092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:29092
  #     KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:29092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: 'trips:1:1'
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock

networks:
  default:
    name: courier-net
    external: true